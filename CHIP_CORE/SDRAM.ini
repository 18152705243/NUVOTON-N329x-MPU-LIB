/******************************************************************************/
/* Dbg_RAM.ini: Initialization Script for Debugging in SDRAM                  */
/******************************************************************************/
/* This file is part of the uVision/ARM development tools.                    */
/* Copyright (c) 2011 Keil Software. All rights reserved.                     */
/* This software may only be used under the terms of a valid, current,        */
/* end user licence from KEIL for a compatible version of KEIL software       */
/* development tools. Nothing else gives you the right to use this software.  */
/******************************************************************************/
DEFINE INT  Entry;
DEFINE LONG GCR_BA;
DEFINE LONG CLK_BA;
DEFINE LONG SDIC_BA;
DEFINE LONG GP_BA;

Entry 	= 0x00008000;
GCR_BA 	= 0xB0000000;
CLK_BA	= 0xB0000200;
SDIC_BA = 0xB0003000;
GP_BA	= 0xB8001000;

FUNC void Clock_Setup (void) 
{
}
FUNC void SDRAM_Setup(void) 
{
	_WDWORD(0xb0003000, 0x00130456);	// SDOPM Init DDR
	_WDWORD(0xb0003030, 0x00001010);	// DQSODS
	_WDWORD(0xb0003010, 0x00000005);	// SDSIZE0
	_WDWORD(0xb0003004, 0x00000021);	// SDCMD
	_WDWORD(0xb0003004, 0x00000023);	// SDCMD
	_WDWORD(0xb0003004, 0x00000027);	// SDCMD
	_WDWORD(0xb000301C, 0x00001002);	// SDEMR
	_WDWORD(0xb0003018, 0x00000122);	// SDMR
	_WDWORD(0xb0003004, 0x00000027);	// SDCMD
	_WDWORD(0xb0003004, 0x0000002B);	// SDCMD
	_WDWORD(0xb0003004, 0x0000002B);	// SDCMD
	_WDWORD(0xb0003018, 0x00000022);	// SDMR
	_WDWORD(0xb0003004, 0x00000020);	// SDCMD
	_WDWORD(0xb0003034, 0x00AAAA00);	// CKDQSDS
	_WDWORD(0xb0003008, 0x0000805A);	// SDREF
	_WDWORD(0xb00000A0, 0x00000000);	// MISCPCR
	_WDWORD(0xb0000224, 0x0000447E);	// UPLLCON PLL=192MHz
	_WDWORD(0xb000020C, 0x00000018);	// CLKDIV0 Divider
	_WDWORD(0xb000021C, 0x00000000);	// CLKDIV4
	_WDWORD(0xb0003028, 0x094E7549);	// SDTIME Sdram Timing

    _sleep_(10);
	_WDWORD(0xb8001010, 0x00000008);	// GPIOB_OMD  PB3=OUTPUT
	_WDWORD(0xb8001018, 0x00000008);	// GPIOB_DOUT PB3=HIGH
    _sleep_(10);
}
FUNC void Remap (void) 
{
}
FUNC void Download (void) 
{
    exec("load %L incremental");
}
FUNC void PC_Setup (void) 
{
    PC = Entry;
}
FUNC void GoMain (void) 
{
    exec("g,main");
}
//Clock_Setup();
SDRAM_Setup();
//Remap();
Download();
PC_Setup();
GoMain();

